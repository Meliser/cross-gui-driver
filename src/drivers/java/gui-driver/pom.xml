<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kds</groupId>
  <artifactId>gui-driver</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>gui-driver</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

   <profiles>
 
        <profile>
            <id>windows</id>
            <activation>
                <property>
                    <name>platform</name>
                    <value>win</value>
                </property>
            </activation>
            <properties>
                <os_name>win32</os_name>
                <lib_name>jnilibrary.dll</lib_name>
            </properties>
 
        </profile>
 
        <profile>
            <id>Linux</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>platform</name>
                    <value>nix</value>
                </property>
            </activation>
            <properties>
                <os_name>linux</os_name>
                <lib_name>libjnilibrary.so</lib_name>
            </properties>
        </profile>
 
    </profiles>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-8</version>
                <extensions>true</extensions>
                <configuration>
                     
                    <!--
                    <javahOS>linux</javahOS>
                    <javahOS>win32</javahOS>
                    -->
                     
                    <javahOS>${os_name}</javahOS>
                    <jdkIncludePath>${java.home}/include</jdkIncludePath>
                     
                    
                    <javahOutputDirectory>${project.basedir}/native/include</javahOutputDirectory>
                    <javahClassNames>
                        <javahClassName>org.kds.Plugin</javahClassName>
                    </javahClassNames>
                   
                     
                    <sources>
                        <source>
                            <directory>src/main/native/src</directory>
                            <fileNames>
                                <fileName>jni.cpp</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>src/main/native/include</directory>
                        </source>

                    </sources>
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>g++</compilerExecutable>
 
                    <compilerStartOptions>
                        <compilerStartOption>-m64</compilerStartOption>
                        <compilerStartOption>-fpic</compilerStartOption>
                        <compilerStartOption>-Wall</compilerStartOption>
                        <compilerStartOption>-Wextra</compilerStartOption>
                        <compilerStartOption>-ansi</compilerStartOption>
                        <compilerStartOption>-g</compilerStartOption>
                        <compilerStartOption>-O3</compilerStartOption>
                    </compilerStartOptions>
 
                    <linkerOutputDirectory>target</linkerOutputDirectory>
                    <linkerExecutable>g++</linkerExecutable>
 
                    <linkerStartOptions>
                        <linkerStartOption>-m64</linkerStartOption>
                        <linkerStartOption>-shared</linkerStartOption>
                        <linkerStartOption>-Wl,--no-as-needed</linkerStartOption>
                        <linkerStartOption>-L/home/kds/src/private/cross-gui-driver/build/src</linkerStartOption>
                        <linkerStartOption>-lcross-gui-driver</linkerStartOption>
                    </linkerStartOptions>
 
                    <linkerFinalName></linkerFinalName>
 
                    <linkerEndOptions>
                        <linkerEndOption>-o ${project.build.directory}/${lib_name}</linkerEndOption>
                    </linkerEndOptions>
                </configuration>
 
                <executions>
                    <execution>
                        <id>javah</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>initialize</goal>
                            <goal>compile</goal>
                            <goal>link</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


      </plugins>
    </pluginManagement>
  </build>
</project>
